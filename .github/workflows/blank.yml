from bakery import assert_equal
from drafter import *
from dataclasses import dataclass

hide_debug_information()
set_website_title("Your Drafter Website")
set_website_framed(False)

@dataclass
class State:
    volume: int
    volume_liters: int
    amps: float  # Use float for flexibility with float inputs
    Liters_Hydrogen_Per_Minute: float  # Adjust to use float for consistency
    history: list[str]
    
@route
def index(state: State) -> Page:
    '''
    State page
    
    Parameters: 
    State 
    
    Returns state page
    
    '''
     
    return Page(state,[
        "Welcome!",
        "This program calculates the amount of time it takes"
        " an electrolyzer to produce enough hydrogen to reach"
        " a specific LEL (Lethal Explosive Limit) in a room",
        "Your answer will require input of you room's dimensions, your electrolyzer's ampage,"
        "and the LEL you wish to find",
        Button("Start", meter_calculation),
        Button("History", calculation_history)
    ])

@route
def meter_calculation(state: State) -> Page:
    ''' User enters in dimensions of room in meters
    
    Parameters: 
    State 
    
    Returns page
    
    '''
    return Page(state, [
        "Please enter your room's dimensions in meters",
        TextBox("width", 0),
        TextBox("height", 0),
        TextBox("length",0),
        Button("Submit", volume_calculation),
        Button("Cancel", index)
    ])

@route
def volume_calculation(state: State, width: str, length: str, height: str) -> Page:
    ''' Checks if the user's inputs are valid numbers (integers or floats) and calculates/returns volume of their room

    Parameters: 
    State
    width: str
    length:str
    height: str

    Returns page
    '''
    
    if width.replace('.', '', 1).isdigit() and length.replace('.', '', 1).isdigit() and height.replace('.', '', 1).isdigit():
        width, length, height = float(width), float(length), float(height)
        
        if width > 0 and length > 0 and height > 0:
            state.volume = width * length * height
            state.volume_liters = state.volume * 1000
            return Page(state, [ "Your Room's Volume Is "+ str(state.volume) + " Meters Cubed",
                                 "Your Room's Volume in Liters Is", str(state.volume_liters),
                                 Button("Continue Calculation", amps_input)              
                        ])
        else:
            return Page(state, ["error! not a positive number!",
                                Button("Restart", index)])
    else:
        return Page(state, ["error! not a valid number!",
                            Button("Restart", index)])
