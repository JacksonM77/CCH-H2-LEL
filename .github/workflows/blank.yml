from dataclasses import dataclass

@dataclass
class State:
    volume: float
    volume_liters: float
    amps: float
    liters_hydrogen_per_minute: float
    history: list[str]

def calculate_volume(width, length, height):
    return width * length * height

def calculate_hydrogen_production(amps):
    f = 96485  # Faraday's Constant
    return (amps / (2 * f)) * 22.4 * 60

def calculate_time_to_lel(volume_liters, liters_hydrogen_per_minute, lel):
    mol_air = volume_liters / 22.4
    lel_mol_hydrogen = mol_air * (lel / 100 * 0.04)
    return (lel_mol_hydrogen * 22.4) / liters_hydrogen_per_minute

def main():
    state = State(0, 0, 0, 0, [])
    
    print("Welcome! This program calculates the time it takes for an electrolyzer to reach a specific LEL in a room.")
    
    # Step 1: Room dimensions
    width = float(input("Enter room width (meters): "))
    length = float(input("Enter room length (meters): "))
    height = float(input("Enter room height (meters): "))
    state.volume = calculate_volume(width, length, height)
    state.volume_liters = state.volume * 1000
    print(f"Room volume: {state.volume} cubic meters ({state.volume_liters} liters)")

    # Step 2: Electrolyzer amps
    state.amps = float(input("Enter electrolyzer current (amps): "))
    state.liters_hydrogen_per_minute = calculate_hydrogen_production(state.amps)
    print(f"Hydrogen production rate: {state.liters_hydrogen_per_minute:.2f} liters per minute")

    # Step 3: Desired LEL
    lel = float(input("Enter desired LEL (e.g., 50 for 50% LEL): "))
    time_to_lel = calculate_time_to_lel(state.volume_liters, state.liters_hydrogen_per_minute, lel)
    print(f"Time to reach {lel}% LEL: {time_to_lel:.2f} minutes")
    
    # Record calculation
    history_entry = f"LEL: {lel}%, Time: {time_to_lel:.2f} minutes, Amps: {state.amps} A"
    state.history.append(history_entry)
    
    # Show history
    print("\nCalculation History:")
    for entry in state.history:
        print(entry)

if __name__ == "__main__":
    main()
